{"version":3,"sources":["components/body/note-list/note-list.module.sass","components/header/header.module.sass","serviceWorker.js","redux/notes-reduser.js","redux/redux-store.js","components/header/header.jsx","components/body/note-list/note/note.jsx","components/body/note-list/note-list.jsx","components/body/note-list/note-list-container.jsx","components/body/body.jsx","App.js","index.js","components/body/note-list/note/note.module.sass"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","note","id","isChoosen","title","notesReduser","state","action","type","copyNotesTitle","map","item","copyItem","itemId","newText","newNoteTitle","copyNotesBody","newNoteBody","copyNote","body","length","copy","filter","reducers","combineReducers","notes","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","Header","className","s","header","header__title","NoteItem","props","useState","note_item","data-key","value","onChange","e","target","updateNewNoteTitleCreator","note_item__title","updateNewNoteBodyCreator","note_item__text","note_item__checkbox","checked","onChooseNoteClick","NoteList","onSendNoteClick","onDeleteNoteClick","isExistChoosenElement","find","notesElements","note_list","onClick","note_list__create_btn","hidden","note_list__delete_btn","height","viewBox","width","d","NoteListContainer","connect","Body","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b8b32be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note_list\":\"note-list_note_list__1dbdp\",\"note_list__create_btn\":\"note-list_note_list__create_btn__2LMWU\",\"note_list__delete_btn\":\"note-list_note_list__delete_btn__3Bc5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2Es0F\",\"header__title\":\"header_header__title__2I9ee\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const updateNewNoteTitle = 'UPDATE-NEW-NOTE-TITLE';\r\nconst updateNewNoteBody = 'UPDATE-NEW-NOTE-BODY';\r\nconst chooseNote = 'CHOOSE-NOTE';\r\nconst sendNewNote = 'SEND-NEW-NOTE';\r\nconst deleteNote = 'DELETE-NOTE';\r\n\r\nlet initialState = {\r\n    note: [\r\n        {id: 1, isChoosen: false, title: 'Home', note: 'By products: apple, banana, milk' },\r\n        {id: 2, isChoosen: false, title: 'Finish project', note: 'Сomplete the project by December 1, 2020.'},\r\n    ]\r\n}\r\n\r\nconst notesReduser = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case updateNewNoteTitle: \r\n            let copyNotesTitle = state.note.map(item => {\r\n                let copyItem = item;\r\n                item.id === action.itemId ? copyItem.title = action.newText : copyItem.title = copyItem.title\r\n                return copyItem;\r\n            });\r\n            return {\r\n                ...state,\r\n                note: copyNotesTitle,\r\n                newNoteTitle: action.newText,\r\n            }\r\n        case updateNewNoteBody:\r\n            let copyNotesBody = state.note.map(item => {\r\n                let copyItem = item;\r\n                item.id === action.itemId ? copyItem.note = action.newText : copyItem.note = copyItem.note\r\n                return copyItem;\r\n            });\r\n            return {\r\n                ...state,\r\n                note: copyNotesBody,\r\n                newNoteBody: action.newText\r\n            }\r\n        case chooseNote:\r\n            let copyNote = state.note.map(item => {\r\n                let copyItem = item;\r\n\r\n                if(item.id === action.itemId) {\r\n                    copyItem.isChoosen = action.isChoosen\r\n                }\r\n                return copyItem;\r\n            });\r\n            return {\r\n                ...state,\r\n                note: copyNote\r\n\r\n            };\r\n        case sendNewNote:\r\n            let title = '';\r\n            let body = '';\r\n            return {\r\n                ...state,\r\n                newNoteTitle: '',\r\n                newNoteBody: '',\r\n                note: [...state.note, {id: ++state.note.length, isChoosen: false, title: title, note: body}],\r\n            };\r\n        case deleteNote:\r\n            let copy = state.note.filter(item => !item.isChoosen);\r\n            return {\r\n                ...state,\r\n                note: copy\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const onDeleteNoteClick = (itemId) => ({type: deleteNote, itemId: itemId})\r\nexport const onSendNoteClick = () => ({type: sendNewNote})\r\nexport const onChooseNoteClick = (isChoosen, itemId) => ({type: chooseNote, isChoosen: isChoosen, itemId: itemId})\r\nexport const updateNewNoteBodyCreator = (body, itemId) => ({type: updateNewNoteBody, newText: body, itemId: itemId })\r\nexport const updateNewNoteTitleCreator = (title, itemId) => ({type: updateNewNoteTitle, newText: title, itemId: itemId })\r\n\r\nexport default notesReduser","import {combineReducers, createStore} from 'redux';\r\nimport notesReduser from './notes-reduser';\r\n\r\nlet reducers = combineReducers({notes: notesReduser});\r\n\r\n\r\nlet store = createStore(\r\n    reducers, \r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './header.module.sass';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className={ s.header }>\r\n        <h1 className={ s.header__title }>Collect your thoughts...</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState} from 'react';\r\nimport s from './note.module.sass';\r\n\r\nfunction NoteItem(props) {\r\n  const [id, setId] = useState(props.id);\r\n\r\n  let onChooseNoteClick = () => {\r\n    props.onChooseNoteClick(!props.isChoosen, id);\r\n  }\r\n\r\n  let onNoteTitleChange = (e) => {\r\n    let title = e.target.value;\r\n    props.updateNewNoteTitleCreator(title, id);\r\n  }\r\n\r\n  let onNoteBodyChange = (e) => {\r\n    let body = e.target.value;\r\n    props.updateNewNoteBodyCreator(body, id);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={ s.note_item } data-key={id}>\r\n\r\n      <textarea type=\"text\" value={props.title} onChange={onNoteTitleChange} className={ s.note_item__title }>{props.title}</textarea>\r\n      <textarea value={props.body} onChange={onNoteBodyChange} className={ s.note_item__text }>{props.body}</textarea>\r\n      <label className={ s.note_item__checkbox }>\r\n        <input type='checkbox' checked={props.isChoosen} onChange={onChooseNoteClick} />\r\n        <span></span>\r\n      </label>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default NoteItem;\r\n\r\n","import React from 'react';\r\nimport s from './note-list.module.sass';\r\nimport NoteItem from './note/note';\r\n\r\nfunction NoteList(props) {\r\n  const notes = props.notes\r\n  const onSendNoteClick = props.onSendNoteClick\r\n  const onDeleteNoteClick = props.onDeleteNoteClick\r\n  const isExistChoosenElement = notes.find(item => item.isChoosen === true);\r\n\r\n  let notesElements = notes.map(\r\n    note => (\r\n      <NoteItem\r\n        id={note.id}\r\n        isChoosen={note.isChoosen}\r\n        title={note.title}\r\n        body={note.note}\r\n        onChooseNoteClick={props.onChooseNoteClick}\r\n        updateNewNoteTitleCreator={props.updateNewNoteTitleCreator}\r\n        updateNewNoteBodyCreator={props.updateNewNoteBodyCreator} />)\r\n  );\r\n\r\n  return (\r\n    <div className={s.note_list}>\r\n      {notesElements}\r\n\r\n      <div onClick={onSendNoteClick} className={s.note_list__create_btn}></div>\r\n\r\n      <button onClick={onDeleteNoteClick} hidden={!isExistChoosenElement} className={s.note_list__delete_btn}>\r\n        <svg height=\"512pt\" viewBox=\"-47 0 512 512\" width=\"512pt\"><path d=\"m416.875 114.441406-11.304688-33.886718c-4.304687-12.90625-16.339843-21.578126-29.941406-21.578126h-95.011718v-30.933593c0-15.460938-12.570313-28.042969-28.027344-28.042969h-87.007813c-15.453125 0-28.027343 12.582031-28.027343 28.042969v30.933593h-95.007813c-13.605469 0-25.640625 8.671876-29.945313 21.578126l-11.304687 33.886718c-2.574219 7.714844-1.2695312 16.257813 3.484375 22.855469 4.753906 6.597656 12.445312 10.539063 20.578125 10.539063h11.816406l26.007813 321.605468c1.933594 23.863282 22.183594 42.558594 46.109375 42.558594h204.863281c23.921875 0 44.175781-18.695312 46.105469-42.5625l26.007812-321.601562h6.542969c8.132812 0 15.824219-3.941407 20.578125-10.535157 4.753906-6.597656 6.058594-15.144531 3.484375-22.859375zm-249.320312-84.441406h83.0625v28.976562h-83.0625zm162.804687 437.019531c-.679687 8.402344-7.796875 14.980469-16.203125 14.980469h-204.863281c-8.40625 0-15.523438-6.578125-16.203125-14.980469l-25.816406-319.183593h288.898437zm-298.566406-349.183593 9.269531-27.789063c.210938-.640625.808594-1.070313 1.484375-1.070313h333.082031c.675782 0 1.269532.429688 1.484375 1.070313l9.269531 27.789063zm0 0\" /><path d=\"m282.515625 465.957031c.265625.015625.527344.019531.792969.019531 7.925781 0 14.550781-6.210937 14.964844-14.21875l14.085937-270.398437c.429687-8.273437-5.929687-15.332031-14.199219-15.761719-8.292968-.441406-15.328125 5.925782-15.761718 14.199219l-14.082032 270.398437c-.429687 8.273438 5.925782 15.332032 14.199219 15.761719zm0 0\" /><path d=\"m120.566406 451.792969c.4375 7.996093 7.054688 14.183593 14.964844 14.183593.273438 0 .554688-.007812.832031-.023437 8.269531-.449219 14.609375-7.519531 14.160157-15.792969l-14.753907-270.398437c-.449219-8.273438-7.519531-14.613281-15.792969-14.160157-8.269531.449219-14.609374 7.519532-14.160156 15.792969zm0 0\" /><path d=\"m209.253906 465.976562c8.285156 0 15-6.714843 15-15v-270.398437c0-8.285156-6.714844-15-15-15s-15 6.714844-15 15v270.398437c0 8.285157 6.714844 15 15 15zm0 0\" /></svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteList;\r\n","import {onSendNoteClick, onDeleteNoteClick, onChooseNoteClick, updateNewNoteBodyCreator, updateNewNoteTitleCreator} from '../../../redux/notes-reduser';\r\nimport NoteList from './note-list';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    notes: state.notes.note,\r\n    newNoteBody: state.notes.newNoteBody,\r\n    newNoteTitle: state.notes.newNoteTitle\r\n  }\r\n}\r\n\r\nconst NoteListContainer = connect(mapStateToProps, {onSendNoteClick, onDeleteNoteClick, onChooseNoteClick, updateNewNoteTitleCreator, updateNewNoteBodyCreator})(NoteList);\r\n\r\nexport default NoteListContainer;\r\n","import React from 'react';\r\nimport NoteListContainer from './note-list/note-list-container';\r\n\r\nfunction Body(props) {\r\n  return (\r\n    <main>\r\n      <NoteListContainer />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport './App.sass';\nimport Header from './components/header/header';\nimport Body from './components/body/body';\n\nfunction App(props) {\n\n  return (\n    <BrowserRouter>\n    <div className=\"app\">\n      <Header />\n      <Body />\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note_item\":\"note_note_item__2ejJ1\",\"note_item_create\":\"note_note_item_create__2kzul\",\"note_item_create_show\":\"note_note_item_create_show__1WWOq\",\"note_item__title\":\"note_note_item__title__2G8ob\",\"note_item__text\":\"note_note_item__text__gXEf6\",\"note_item__checkbox\":\"note_note_item__checkbox__3TVLR\"};"],"sourceRoot":""}